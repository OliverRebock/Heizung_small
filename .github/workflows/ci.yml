name: Pi 5 Sensor Monitor CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]  # Nur Pi 5 relevante Version

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Basic syntax check
      run: |
        python -m py_compile sensor_monitor.py
        python -m py_compile sensor_influxdb.py
        python -m py_compile individualized_sensors.py
        python -m py_compile advanced_monitoring.py
        python -m py_compile web_dashboard.py

    - name: Test configuration files
      run: |
        python -c "import configparser; c=configparser.ConfigParser(); c.read('config.ini'); print('Config OK')"

  docker-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Test Docker Compose syntax
      run: |
        docker compose config

  release:
    needs: [test, docker-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'release:')
    
    steps:
    - uses: actions/checkout@v4

    - name: Create Release Tag
      run: |
        git tag v$(date +%Y%m%d-%H%M%S)
        echo "Release tagged successfully"
